{
  "version": 3,
  "sources": ["../data-viz.js"],
  "sourcesContent": ["export function setupDataViz(tracker) {\n  // Attach visualization and UI methods to the tracker instance\n  tracker.renderTimelineChart = renderTimelineChart;\n  tracker.renderTypeChart = renderTypeChart;\n  tracker.renderHeatmap = renderHeatmap;\n  tracker.toggleSidebar = toggleSidebar;\n  tracker.closeSidebar = closeSidebar;\n  tracker.animateEntrance = animateEntrance;\n}\n\nfunction renderTimelineChart() {\n  const container = d3.select(\"#timeline-chart\");\n  container.selectAll(\"*\").remove();\n\n  if (this.chartData.timeline.length === 0) return;\n\n  const margin = { top: 20, right: 30, bottom: 40, left: 40 };\n  const width = 360 - margin.left - margin.right;\n  const height = 200 - margin.top - margin.bottom;\n\n  const svg = container\n    .append(\"svg\")\n    .attr(\"width\", width + margin.left + margin.right)\n    .attr(\"height\", height + margin.top + margin.bottom);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(${margin.left},${margin.top})`);\n\n  // Add title\n  container\n    .insert(\"h4\", \"svg\")\n    .text(\"Reports Over Time (Last 30 Days)\")\n    .style(\"margin\", \"0 0 15px 0\")\n    .style(\"color\", \"#2c3e50\");\n\n  const xScale = d3\n    .scaleBand()\n    .domain(this.chartData.timeline.map((d) => d.date))\n    .range([0, width])\n    .padding(0.1);\n\n  const yScale = d3\n    .scaleLinear()\n    .domain([0, d3.max(this.chartData.timeline, (d) => d.ice + d.pig)])\n    .range([height, 0]);\n\n  // Create stacked data\n  const stack = d3.stack().keys([\"ice\", \"pig\"]);\n\n  const stackedData = stack(this.chartData.timeline);\n\n  const colors = { ice: \"#ff4444\", pig: \"#4444ff\" };\n\n  // Draw bars\n  g.selectAll(\".layer\")\n    .data(stackedData)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"layer\")\n    .attr(\"fill\", (d) => colors[d.key])\n    .selectAll(\"rect\")\n    .data((d) => d)\n    .enter()\n    .append(\"rect\")\n    .attr(\"x\", (d) => xScale(d.data.date))\n    .attr(\"y\", height)\n    .attr(\"height\", 0)\n    .attr(\"width\", xScale.bandwidth())\n    .transition()\n    .duration(800)\n    .delay((d, i) => i * 50)\n    .attr(\"y\", (d) => yScale(d[1]))\n    .attr(\"height\", (d) => yScale(d[0]) - yScale(d[1]));\n\n  // Add axes\n  g.append(\"g\")\n    .attr(\"transform\", `translate(0,${height})`)\n    .call(d3.axisBottom(xScale).tickFormat(\"\"));\n\n  g.append(\"g\").call(d3.axisLeft(yScale).ticks(5));\n}\n\nfunction renderTypeChart() {\n  const container = d3.select(\"#type-chart\");\n  container.selectAll(\"*\").remove();\n\n  const data = [\n    { type: \"ICE\", count: this.chartData.types.ice, color: \"#ff4444\" },\n    { type: \"PIG\", count: this.chartData.types.pig, color: \"#4444ff\" },\n  ];\n\n  if (data.every((d) => d.count === 0)) return;\n\n  // Add title\n  container\n    .append(\"h4\")\n    .text(\"Report Types Distribution\")\n    .style(\"margin\", \"0 0 15px 0\")\n    .style(\"color\", \"#2c3e50\");\n\n  const width = 360;\n  const height = 200;\n  const radius = Math.min(width, height) / 2 - 20;\n\n  const svg = container\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height);\n\n  const g = svg\n    .append(\"g\")\n    .attr(\"transform\", `translate(${width / 2},${height / 2})`);\n\n  const pie = d3\n    .pie()\n    .value((d) => d.count)\n    .sort(null);\n\n  const arc = d3\n    .arc()\n    .innerRadius(radius * 0.4)\n    .outerRadius(radius);\n\n  const arcs = g\n    .selectAll(\".arc\")\n    .data(pie(data))\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"arc\");\n\n  arcs\n    .append(\"path\")\n    .attr(\"fill\", (d) => d.data.color)\n    .attr(\"stroke\", \"white\")\n    .attr(\"stroke-width\", 2)\n    .transition()\n    .duration(800)\n    .attrTween(\"d\", function (d) {\n      const interpolate = d3.interpolate({ startAngle: 0, endAngle: 0 }, d);\n      return function (t) {\n        return arc(interpolate(t));\n      };\n    });\n\n  arcs\n    .append(\"text\")\n    .attr(\"transform\", (d) => `translate(${arc.centroid(d)})`)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"14px\")\n    .attr(\"font-weight\", \"bold\")\n    .attr(\"fill\", \"white\")\n    .text((d) => (d.data.count > 0 ? d.data.count : \"\"))\n    .style(\"opacity\", 0)\n    .transition()\n    .delay(800)\n    .duration(300)\n    .style(\"opacity\", 1);\n}\n\nfunction renderHeatmap() {\n  const container = d3.select(\"#heatmap-chart\");\n  container.selectAll(\"*\").remove();\n\n  // Add title\n  container\n    .append(\"h4\")\n    .text(\"Activity by Hour of Day\")\n    .style(\"margin\", \"0 0 15px 0\")\n    .style(\"color\", \"#2c3e50\");\n\n  const width = 360;\n  const height = 60;\n  const cellSize = width / 24;\n\n  const svg = container\n    .append(\"svg\")\n    .attr(\"width\", width)\n    .attr(\"height\", height + 40);\n\n  const maxValue = d3.max(this.chartData.hourly);\n  const colorScale = d3\n    .scaleSequential(d3.interpolateBlues)\n    .domain([0, maxValue || 1]);\n\n  const cells = svg\n    .selectAll(\".hour-cell\")\n    .data(this.chartData.hourly)\n    .enter()\n    .append(\"g\")\n    .attr(\"class\", \"hour-cell\");\n\n  cells\n    .append(\"rect\")\n    .attr(\"x\", (d, i) => i * cellSize)\n    .attr(\"y\", 20)\n    .attr(\"width\", cellSize - 1)\n    .attr(\"height\", height - 20)\n    .attr(\"fill\", \"#f0f0f0\")\n    .transition()\n    .duration(600)\n    .delay((d, i) => i * 25)\n    .attr(\"fill\", (d) => colorScale(d));\n\n  cells\n    .append(\"text\")\n    .attr(\"x\", (d, i) => i * cellSize + cellSize / 2)\n    .attr(\"y\", 15)\n    .attr(\"text-anchor\", \"middle\")\n    .attr(\"font-size\", \"10px\")\n    .attr(\"fill\", \"#666\")\n    .text((d, i) => (i % 4 === 0 ? i : \"\"));\n\n  // Add tooltip\n  cells.append(\"title\").text((d, i) => `${i}:00 - ${d} reports`);\n}\n\nfunction toggleSidebar() {\n  const sidebar = document.getElementById(\"sidebar\");\n  const isOpen = sidebar.classList.contains(\"open\");\n\n  if (isOpen) {\n    this.closeSidebar();\n  } else {\n    sidebar.style.display = \"block\";\n    sidebar.classList.add(\"open\");\n    gsap.from(\"#chart-container > *\", {\n      x: 50,\n      opacity: 0,\n      duration: 0.5,\n      stagger: 0.1,\n      delay: 0.2,\n    });\n    this.updateCharts();\n  }\n}\n\nfunction closeSidebar() {\n  const sidebar = document.getElementById(\"sidebar\");\n  sidebar.classList.remove(\"open\");\n  setTimeout(() => {\n    if (!sidebar.classList.contains(\"open\")) {\n      sidebar.style.display = \"none\";\n    }\n  }, 400);\n}\n\nfunction animateEntrance() {\n  gsap.from(\"#header\", {\n    y: -100,\n    opacity: 0,\n    duration: 0.8,\n    ease: \"power2.out\",\n  });\n  gsap.from(\".stat-item\", {\n    y: 50,\n    opacity: 0,\n    duration: 0.6,\n    stagger: 0.1,\n    delay: 0.3,\n    ease: \"back.out(1.7)\",\n  });\n  gsap.from(\"#map-container\", {\n    scale: 0.9,\n    opacity: 0,\n    duration: 1,\n    delay: 0.5,\n    ease: \"power2.out\",\n  });\n  gsap.from(\".legend\", {\n    x: 100,\n    opacity: 0,\n    duration: 0.6,\n    delay: 0.8,\n  });\n}\n"],
  "mappings": "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",
  "names": ["setupDataViz", "tracker", "renderTimelineChart", "renderTypeChart", "renderHeatmap", "toggleSidebar", "closeSidebar", "animateEntrance", "container", "margin", "width", "height", "g", "xScale", "d", "yScale", "stackedData", "colors", "i", "data", "radius", "pie", "arc", "arcs", "interpolate", "t", "cellSize", "svg", "maxValue", "colorScale", "cells", "sidebar"]
}
