import{a as f}from"./chunk-QXHY36KT.js";var h={ICE:{label:"ICE Activity",description:"Sightings or activity of Immigration and Customs Enforcement.",color:"#ff4444",icon:"ti-building-factory-2",emoji:"\u{1F6A8}",unicode:"\uEC2E"},PIG:{label:"PIG Activity",description:"General police activity or presence.",color:"#4444ff",icon:"ti-bell-ringing-2",emoji:"\u{1F437}",unicode:"\uEC18"},CHECKPOINT:{label:"Checkpoint",description:"DUI, license, or other types of police checkpoints.",color:"#ff9800",icon:"ti-traffic-cone",emoji:"\u{1F6A7}",unicode:"\uEF88"},RAID:{label:"Raid",description:"Confirmed raid on a home or workplace.",color:"#9c27b0",icon:"ti-door-off",emoji:"\u{1F6AA}",unicode:"\uEEBE"},OTHER:{label:"Other",description:"Other types of law enforcement activity.",color:"#795548",icon:"ti-question-mark",emoji:"\u2753",unicode:"\uEF05"}};var l=class{constructor(){this.translations={},this.currentLang="en",this.magicCode=this.generateMagicCode(),this.vectorSource=new ol.source.Vector,this.markers=[],this.stats={ice:0,pig:0,total:0,today:0},this.chartData={timeline:[],types:{ice:0,pig:0},hourly:new Array(24).fill(0),daily:new Array(7).fill(0)},this.displayedMarkerIds=new Set,this.ws=null,this.reconnectAttempts=0,this.maxReconnectAttempts=5,this.deferredPrompt=null}generateMagicCode(){return Math.random().toString(36).substring(2,15)}async init(){this.showLoadingIndicator();try{await this.loadTranslations(),this.setupEventListeners(),this.updateUIText(),this.setupMap(),this.setupLegend(),await this.loadMarkers(),this.startAutoRefresh(),this.setupRefreshButton(),this.connectWebSocket(),this.setupInstallPrompt()}catch(e){console.error("Init error:",e),this.showToast("Failed to load application","error")}finally{this.hideLoadingIndicator()}}async loadTranslations(){let e=await fetch("./pmaptranslate.json");this.translations=await e.json()}t(e){return this.translations[this.currentLang]?.[e]||e}setupMap(){let e=ol.proj.fromLonLat([-94.5786,39.0997]);try{this.map=new ol.Map({target:"map",layers:[new ol.layer.Tile({source:new ol.source.OSM}),new ol.layer.Vector({source:this.vectorSource,style:this.getMarkerStyle.bind(this)})],view:new ol.View({center:e,zoom:window.innerWidth<768?10:11})}),this.map.on("click",this.onMapClick.bind(this)),setTimeout(()=>{this.map&&this.map.updateSize()},100),f(this.map)}catch(t){console.error("Map setup error:",t),document.getElementById("map").innerHTML='<div style="display:flex;align-items:center;justify-content:center;height:100%;color:#666;">Map failed to load. Please refresh.</div>'}}setupLegend(){let e=document.getElementById("legend-container");if(e){e.innerHTML="";for(let t in h){let o=h[t],s=document.createElement("div");s.className="legend-item";let n=`
        <svg width="20" height="28" viewBox="0 0 30 42" xmlns="http://www.w3.org/2000/svg" style="margin-right: 8px; vertical-align: middle;">
          <path d="M15 0 C8.373 0 3 5.373 3 12 C3 21.375 15 42 15 42 S27 21.375 27 12 C27 5.373 21.627 0 15 0 Z" fill="${o.color}"/>
          <style>
            .icon { font-family: "tabler-icons"; font-size: 18px; fill: white; }
          </style>
          <text x="15" y="19" class="icon" text-anchor="middle">${o.unicode}</text>
        </svg>
      `,a=document.createElement("span");a.textContent=o.label,s.innerHTML=n,s.appendChild(a),e.appendChild(s)}}}getMarkerStyle(e){let t=e.get("type"),o=h[t]||h.OTHER,s=o.color,n=o.unicode;return new ol.style.Style({image:new ol.style.Icon({anchor:[.5,1],src:`data:image/svg+xml,${encodeURIComponent(`
          <svg width="30" height="42" xmlns="http://www.w3.org/2000/svg">
            <defs>
              <filter id="shadow" x="-50%" y="-50%" width="200%" height="200%">
                <feDropShadow dx="0" dy="1" stdDeviation="1" flood-color="rgba(0,0,0,0.3)"/>
              </filter>
            </defs>
            <path d="M15 0 C8.373 0 3 5.373 3 12 C3 21.375 15 42 15 42 S27 21.375 27 12 C27 5.373 21.627 0 15 0 Z" fill="${s}" filter="url(#shadow)"/>
            <style>
              .icon { font-family: "tabler-icons"; font-size: 18px; fill: white; }
            </style>
            <text x="15" y="19" class="icon" text-anchor="middle">${n}</text>
          </svg>
        `)}`})})}setupEventListeners(){document.getElementById("addBtn").onclick=()=>this.toggleAddMode(),document.getElementById("vizBtn").onclick=()=>this.toggleSidebar(),document.getElementById("closeSidebar").onclick=()=>this.closeSidebar(),document.getElementById("langSelect").onchange=e=>this.changeLang(e.target.value),document.querySelector(".close").onclick=()=>this.closeModal(),this.searchTimeout=null,document.getElementById("searchInput").addEventListener("keyup",()=>{clearTimeout(this.searchTimeout),this.searchTimeout=setTimeout(()=>this.searchLocation(),300)}),document.addEventListener("click",e=>{let t=document.querySelector(".search-container");if(t&&!t.contains(e.target)){let o=document.getElementById("searchResults");o&&(o.style.display="none")}}),document.addEventListener("keydown",e=>{e.key==="Escape"&&this.closeModal(),e.key==="d"&&e.ctrlKey&&(e.preventDefault(),this.toggleSidebar())})}async onMapClick(e){if(this.addMode){let t=ol.proj.toLonLat(e.coordinate);this.showAddMarkerModal(t)}else{let t=this.map.forEachFeatureAtPixel(e.pixel,o=>o);t&&this.showMarkerDetails(t)}}showAddMarkerModal(e){let t=Object.entries(h).map(([s,n])=>`<option value="${s}">${n.emoji} ${n.label}</option>`).join("");document.getElementById("modal-body").innerHTML=`
      <h3 style="margin-top: 0; color: #2c3e50;">${this.t("add_new_marker")}</h3>
      <div style="margin-bottom: 15px;">
        <label style="display: block; margin-bottom: 5px; font-weight: 600; color: #555;">Report Type</label>
        <select id="markerType" style="background: white;">
          ${t}
        </select>
      </div>
      <div style="margin-bottom: 15px;">
        <label style="display: block; margin-bottom: 5px; font-weight: 600; color: #555;">Title *</label>
        <input id="markerTitle" placeholder="Brief description of the incident" required>
      </div>
      <div style="margin-bottom: 15px;">
        <label style="display: block; margin-bottom: 5px; font-weight: 600; color: #555;">Details</label>
        <textarea id="markerDesc" placeholder="Additional details, time, description..."></textarea>
      </div>
      <div style="margin-bottom: 20px;">
        <label style="display: block; margin-bottom: 5px; font-weight: 600; color: #555;">Media (Optional)</label>
        <input id="mediaUpload" type="file" accept="image/*,video/*" multiple>
        <small style="color: #666; font-size: 12px;">Images and videos are uploaded anonymously</small>
      </div>
      <div style="display: flex; gap: 10px; justify-content: flex-end;">
        <button onclick="tracker.closeModal()" style="background: #95a5a6;">${this.t("cancel")}</button>
        <button onclick="tracker.saveMarker([${e}])" class="primary-btn">${this.t("save")}</button>
      </div>
    `;let o=document.getElementById("modal");o.style.display="block",gsap.from(".modal-content",{scale:.8,opacity:0,duration:.3,ease:"back.out(1.7)"})}async saveMarker(e){let t=document.getElementById("markerType").value,o=document.getElementById("markerTitle").value,s=document.getElementById("markerDesc").value,n=document.getElementById("mediaUpload").files;if(!o){this.showToast("Please enter a title","error");return}let a={id:Date.now().toString(),type:t,title:o,description:s,coords:e,timestamp:new Date().toISOString(),magicCode:this.magicCode,media:[]},i=document.querySelector(".modal-content .primary-btn"),d=i.textContent;i.textContent="Saving...",i.disabled=!0;let c=document.createElement("div");c.className="progress-container";let u=document.createElement("div");u.className="progress-bar",c.appendChild(u),i.parentElement.appendChild(c);try{let m=[],y=0;if(n.length>0){i.textContent=`Uploading ${n.length} file(s)...`;let w=Array.from(n).map((p,v)=>this.uploadMedia(p,a.id).then(k=>(u.style.width=`${(v+1)/n.length*100}%`,k)));(await Promise.allSettled(w)).forEach(p=>{p.status==="fulfilled"&&p.value?m.push(p.value):y++}),a.media=m}i.textContent="Saving report...",await this.saveToCloudflare(a),this.markers.push(a),this.addMarkerToMap(a),this.updateStats(),this.updateCharts(),this.closeModal(),this.addMode=!1;let g="Report saved successfully!";y>0?(g+=` (${y} media file(s) failed to upload.)`,this.showToast(g,"error")):this.showToast(g,"success")}catch(m){console.error("Save marker critical error:",m),this.showToast("Failed to save the report. Please try again.","error")}finally{i.textContent=d,i.disabled=!1,c.remove()}}async uploadMedia(e,t){try{let o=await fetch("/api/upload-url",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify({filename:e.name,contentType:e.type})});if(!o.ok)throw new Error(`Upload URL request failed: ${o.status}`);let s=await o.json();if(s.error)throw new Error(s.error);let n=await fetch(s.uploadUrl,{method:"PUT",body:e,headers:{"Content-Type":e.type}});if(!n.ok)throw new Error(`Upload failed: ${n.status}`);return s.publicUrl}catch(o){return console.error("Upload failed:",o),this.showToast(`Upload failed: ${o.message}`,"error"),null}}async saveToCloudflare(e){let t=3,o=1e3;for(;t>0;){let s=await fetch("/api/markers",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(e)});if(s.ok)return s.json();if(s.status===429)console.warn("Rate limited. Retrying..."),await new Promise(n=>setTimeout(n,o)),o*=2,t--;else{let n=await s.json().catch(()=>({error:"Unknown error"}));throw new Error(n.error||"Failed to save marker")}}throw new Error("Rate limit exceeded. Try again later.")}addMarkerToMap(e){if(this.displayedMarkerIds.has(e.id))return console.log(`Marker ${e.id} already displayed, skipping`),null;!e.coords&&e.lon&&e.lat&&(e.coords=[e.lon,e.lat]);let t=e.coords[0],o=e.coords[1];if(isNaN(t)||isNaN(o))return console.error("Invalid coordinates for marker:",e),null;let s=new ol.Feature({geometry:new ol.geom.Point(ol.proj.fromLonLat([t,o])),...e});return this.vectorSource.addFeature(s),this.displayedMarkerIds.add(e.id),setTimeout(()=>{let n=this.map.getPixelFromCoordinate(ol.proj.fromLonLat([t,o]));n&&this.animateMarkerPulse(n)},100),s}animateMarkerPulse(e){let t=document.createElement("div");t.className="marker-pulse",t.style.left=e[0]+"px",t.style.top=e[1]+"px",document.body.appendChild(t),setTimeout(()=>t.remove(),2e3)}async refreshMarkers(){try{let t=await(await fetch("/api/markers")).json(),o=0;t.forEach(s=>{this.displayedMarkerIds.has(s.id)||(this.addMarkerToMap(s),o++)}),o>0?this.showToast(`Added ${o} new marker(s)`,"success"):this.showToast("Map is up to date","success")}catch(e){console.error("Refresh error:",e),this.showToast("Failed to refresh markers","error")}}startAutoRefresh(){setInterval(()=>this.refreshMarkers(),6e4)}setupRefreshButton(){let e=document.createElement("button");e.id="refresh-btn",e.className="secondary-btn",e.innerHTML="\u21BB",e.title="Refresh Map",e.addEventListener("click",()=>{e.innerHTML="...",this.refreshMarkers().finally(()=>{e.innerHTML="\u21BB"})}),document.querySelector(".secondary-controls").appendChild(e)}async loadMarkers(){try{let t=await(await fetch("/api/markers")).json();this.markers=t,this.updateStats(),t.forEach(o=>this.addMarkerToMap(o)),this.updateCharts()}catch(e){console.error("Failed to load markers:",e)}}showMarkerDetails(e){let t=e.getProperties(),o=t.media&&t.media.length>0?t.media.map(d=>{let c=d.split(".").pop().toLowerCase();return["jpg","jpeg","png","gif","webp","avif","bmp","svg"].includes(c)?`<img src="${d}" class="media-preview" onerror="this.style.display='none'">`:["mp4","webm","ogg","mov","avi"].includes(c)?`<video controls class="media-preview"><source src="${d}" type="video/${c==="mov"?"quicktime":c}"></video>`:["mp3","wav","ogg","aac","m4a","flac"].includes(c)?`<audio controls class="media-preview"><source src="${d}" type="audio/${c}"></audio>`:`<a href="${d}" target="_blank">View Media</a>`}).join(""):"",s=`upvoted_${t.id}`,n=`reported_${t.id}`,a=sessionStorage.getItem(s),i=sessionStorage.getItem(n);document.getElementById("modal-body").innerHTML=`
  <h3>${t.title}</h3>
  <div class="modal-meta">
    <span><strong>Type:</strong> ${t.type}</span>
    <span><strong>Posted:</strong> ${new Date(t.timestamp).toLocaleString()}</span>
  </div>
  <p>${t.description||"No description"}</p>
  <div class="media-container">${o}</div>

  <div class="modal-actions">
    <button id="report-btn" onclick="tracker.reportMarker('${t.id}')" ${i?"disabled":""}>
      ${i?"\u2713 Reported":"\u26A0 Report"}
    </button>
    <button id="upvote-btn" onclick="tracker.upvoteMarker('${t.id}')" ${a?"disabled":""}>
      \u{1F44D} ${a?this.t("upvoted"):this.t("upvote")} (<span id="upvote-count">${t.upvotes||0}</span>)
    </button>
  </div>

  <div id="comments"><h4>${this.t("comments")}</h4></div>
  <textarea id="newComment" placeholder="${this.t("add_comment")}"></textarea>
  <input id="commentAuthor" placeholder="${this.t("author")}">
  <button onclick="tracker.addComment('${t.id}')">${this.t("add_comment")}</button>

  ${this.canEdit(t)?`
    <div class="admin-actions">
      <button onclick="tracker.deleteMarker('${t.id}')">${this.t("delete")}</button>
    </div>
  `:""}
`,this.loadComments(t.id),document.getElementById("modal").style.display="block"}async upvoteMarker(e){let t=document.getElementById("upvote-btn");if(!(!t||t.disabled))try{let o=await fetch(`/api/upvotes/${e}`,{method:"POST"});if(!o.ok){let n=await o.json();throw new Error(n.error||"Upvote failed")}let s=await o.json();sessionStorage.setItem(`upvoted_${e}`,"true"),t.disabled=!0,t.innerHTML=`\u{1F44D} ${this.t("upvoted")} (<span id="upvote-count">${s.upvotes}</span>)`,this.showToast("Upvoted!","success")}catch(o){console.error("Upvote error:",o),this.showToast(o.message,"error")}}async reportMarker(e){if(confirm(this.t("confirm_report")||"Are you sure you want to report this?"))try{if(!(await fetch(`/api/markers/${e}/report`,{method:"POST"})).ok)throw new Error("Report failed");sessionStorage.setItem(`reported_${e}`,"true");let o=document.getElementById("report-btn");o&&(o.disabled=!0,o.textContent="\u2713 Reported"),this.showToast("Report submitted. Thank you.","success")}catch(t){console.error("Report error:",t),this.showToast("Failed to submit report","error")}}connectWebSocket(){try{let t=`${window.location.protocol==="https:"?"wss:":"ws:"}//${window.location.host}/ws`;this.ws=new WebSocket(t),this.ws.onopen=()=>{console.log("WebSocket connected"),this.reconnectAttempts=0,this.showToast("Connected to live updates","success")},this.ws.onmessage=o=>{let s=JSON.parse(o.data);this.handleWebSocketMessage(s)},this.ws.onerror=o=>{console.error("WebSocket error:",o)},this.ws.onclose=()=>{console.log("WebSocket disconnected"),this.reconnectWebSocket()}}catch(e){console.error("Failed to establish WebSocket:",e)}}reconnectWebSocket(){if(this.reconnectAttempts<this.maxReconnectAttempts){let e=Math.min(1e3*Math.pow(2,this.reconnectAttempts),3e4);this.reconnectAttempts++,console.log(`Reconnecting in ${e}ms (attempt ${this.reconnectAttempts})`),setTimeout(()=>this.connectWebSocket(),e)}else this.showToast("Live updates disconnected. Refresh page to reconnect.","error")}handleWebSocketMessage(e){switch(console.log("WebSocket message:",e),e.type){case"welcome":console.log(`Connected. ${e.activeUsers} active users`),this.updateActiveUsers(e.activeUsers);break;case"marker_added":this.displayedMarkerIds.has(e.marker.id)||(this.addMarkerToMap(e.marker),this.showToast("New report added","info"),this.triggerHaptic(20));break;case"active_users":this.updateActiveUsers(e.count);break;default:console.log("Unknown message type:",e.type)}}updateActiveUsers(e){let t=document.getElementById("active-users");t||(t=document.createElement("div"),t.id="active-users",t.className="active-users-indicator",document.querySelector(".secondary-controls").appendChild(t)),t.textContent=`\u{1F465} ${e} online`}sendUserLocation(){if(this.ws&&this.ws.readyState===WebSocket.OPEN){let e=this.map.getView().getCenter(),t=ol.proj.toLonLat(e);this.ws.send(JSON.stringify({type:"user_location",location:{lat:t[1],lng:t[0]}}))}}canEdit(e){return e.magicCode===this.magicCode||localStorage.getItem(`edit_${e.id}`)==="true"}async addComment(e){let t=document.getElementById("newComment").value,o=document.getElementById("commentAuthor").value;if(!t)return;let s={markerId:e,text:t,author:o||"Anonymous"};try{if(!(await fetch("/api/comments",{method:"POST",headers:{"Content-Type":"application/json"},body:JSON.stringify(s)})).ok)throw new Error("Failed to save comment");this.loadComments(e),this.showToast("Comment added"),document.getElementById("newComment").value="",document.getElementById("commentAuthor").value=""}catch(n){console.error("Comment error:",n),this.showToast("Failed to add comment","error")}}async loadComments(e){try{let o=await(await fetch(`/api/comments/${e}`)).json();document.getElementById("comments").innerHTML=o.map(s=>`
        <div class="comment">
          <div class="comment-author">${s.author}</div>
          <div class="comment-time">${new Date(s.timestamp).toLocaleString()}</div>
          <p>${s.text}</p>
        </div>
      `).join("")}catch(t){console.error("Failed to load comments:",t)}}toggleAddMode(){this.addMode=!this.addMode;let e=document.getElementById("addBtn");this.addMode?(e.innerHTML='<span class="btn-icon">\u2715</span> Done',e.style.background="linear-gradient(45deg, #95a5a6, #7f8c8d)",this.showToast(this.t("add_marker_instruction")||"Click on the map to add a report")):(e.innerHTML=`<span class="btn-icon">+</span> ${this.t("add_new_marker")}`,e.style.background="linear-gradient(45deg, #ff6b6b, #ee5a52)"),gsap.to(e,{scale:1.05,duration:.1,yoyo:!0,repeat:1})}changeLang(e){this.currentLang=e,this.updateUIText()}closeModal(){document.getElementById("modal").style.display="none"}triggerHaptic(e=20){"vibrate"in navigator&&navigator.vibrate(e)}playSound(e){try{let t=new(window.AudioContext||window.webkitAudioContext),o=t.createOscillator(),s=t.createGain();o.connect(s),s.connect(t.destination),e==="success"?(o.frequency.value=800,s.gain.setValueAtTime(.1,t.currentTime),s.gain.exponentialRampToValueAtTime(.01,t.currentTime+.1),o.start(t.currentTime),o.stop(t.currentTime+.1)):e==="error"&&(o.frequency.value=300,s.gain.setValueAtTime(.1,t.currentTime),s.gain.exponentialRampToValueAtTime(.01,t.currentTime+.2),o.start(t.currentTime),o.stop(t.currentTime+.2))}catch{console.log("Audio not supported")}}showToast(e,t="info"){let o=document.getElementById("toast-container"),s=document.createElement("div");s.className=`toast toast-${t}`,s.textContent=e,o.appendChild(s),setTimeout(()=>{s.style.opacity="1",s.style.transform="translateX(0)"},10),setTimeout(()=>{s.style.opacity="0",s.style.transform="translateX(100%)",setTimeout(()=>s.remove(),500)},3e3),t==="success"?(this.triggerHaptic(20),this.playSound("success")):t==="error"&&(this.triggerHaptic([50,50,50]),this.playSound("error"))}async deleteMarker(e){if(confirm(this.t("confirm_delete")))try{if(!(await fetch(`/api/markers/${e}`,{method:"DELETE"})).ok)throw new Error("Failed to delete marker");let o=this.vectorSource.getFeatures().find(s=>s.get("id")===e);o&&this.vectorSource.removeFeature(o),this.markers=this.markers.filter(s=>s.id!==e),this.updateStats(),this.updateCharts(),this.showToast("Report deleted"),this.closeModal()}catch(t){console.error("Delete error:",t),this.showToast("Failed to delete report","error")}}setupInstallPrompt(){window.addEventListener("beforeinstallprompt",e=>{e.preventDefault(),this.deferredPrompt=e,this.showInstallButton()}),window.addEventListener("appinstalled",()=>{console.log("PWA installed"),this.deferredPrompt=null,this.hideInstallButton(),this.showToast("App installed! Open from your home screen.","success")})}showInstallButton(){let e=document.createElement("button");e.id="install-btn",e.className="secondary-btn",e.innerHTML="\u{1F4F1} Install App",e.addEventListener("click",()=>this.promptInstall()),document.querySelector(".controls").appendChild(e)}hideInstallButton(){let e=document.getElementById("install-btn");e&&e.remove()}async promptInstall(){if(!this.deferredPrompt)return;this.deferredPrompt.prompt();let{outcome:e}=await this.deferredPrompt.userChoice;console.log(`Install prompt outcome: ${e}`),this.deferredPrompt=null,this.hideInstallButton()}async searchLocation(){let e=document.getElementById("searchInput").value;if(e.length<3){document.getElementById("searchResults").style.display="none";return}let t=document.getElementById("searchBtn");t.disabled=!0,t.textContent="...";try{let o=await fetch(`https://nominatim.openstreetmap.org/search?q=${encodeURIComponent(e)}&format=json&limit=5`);if(!o.ok)throw new Error("Search failed");let s=await o.json();this.displaySearchResults(s)}catch(o){console.error("Search error:",o),this.showToast("Search failed","error")}finally{t.disabled=!1,t.textContent="Search"}}displaySearchResults(e){let t=document.getElementById("searchResults");if(t.innerHTML="",e.length===0){t.innerHTML='<div class="search-result-item">No results found.</div>',t.style.display="block";return}e.forEach(o=>{let s=document.createElement("div");s.className="search-result-item",s.textContent=o.display_name,s.onclick=()=>{this.panToLocation([parseFloat(o.lon),parseFloat(o.lat)]),document.getElementById("searchInput").value=o.display_name,t.style.display="none"},t.appendChild(s)}),t.style.display="block"}panToLocation(e){this.map&&this.map.getView().animate({center:ol.proj.fromLonLat(e),zoom:14,duration:1500,easing:ol.easing.easeOut})}};l.prototype.showLoadingIndicator=function(){let r=document.getElementById("loading-indicator");r&&(r.style.display="flex")};l.prototype.hideLoadingIndicator=function(){let r=document.getElementById("loading-indicator");r&&r.remove()};l.prototype.updateUIText=function(){document.querySelectorAll("[data-translate-key]").forEach(r=>{let e=r.dataset.translateKey,t=this.t(e);if(r.children.length===0||r.tagName==="TITLE"){r.textContent=t;return}for(let o of r.childNodes)if(o.nodeType===Node.TEXT_NODE&&o.textContent.trim().length>0){o.textContent=` ${t}`;break}})};l.prototype.updateStats=function(){let r=new Date().toDateString();this.stats={total:this.markers.length,ice:this.markers.filter(e=>e.type==="ICE").length,pig:this.markers.filter(e=>e.type==="PIG").length,today:this.markers.filter(e=>new Date(e.timestamp).toDateString()===r).length},this.animateStats()};l.prototype.animateStats=function(){Object.keys(this.stats).forEach(r=>{let e=document.querySelector(`#stat-${r} .stat-number`);e&&gsap.to({value:parseInt(e.textContent)||0},{value:this.stats[r],duration:1.5,ease:"power2.out",onUpdate:function(){e.textContent=Math.round(this.targets()[0].value)}})})};l.prototype.updateCharts=function(){this.processChartData(),typeof this.renderTimelineChart=="function"&&(this.renderTimelineChart(),this.renderTypeChart(),this.renderHeatmap())};l.prototype.processChartData=function(){this.chartData.timeline=[],this.chartData.types={ice:0,pig:0},this.chartData.hourly.fill(0),this.chartData.daily.fill(0);let r={};this.markers.forEach(e=>{let t=new Date(e.timestamp),o=t.toDateString(),s=t.getHours(),n=t.getDay();r[o]||(r[o]={date:o,ice:0,pig:0}),r[o][e.type.toLowerCase()]++,this.chartData.types[e.type.toLowerCase()]++,this.chartData.hourly[s]++,this.chartData.daily[n]++}),this.chartData.timeline=Object.values(r).sort((e,t)=>new Date(e.date)-new Date(t.date)).slice(-30)};export{l as ICEPIGTracker};
//# sourceMappingURL=index.js.map
