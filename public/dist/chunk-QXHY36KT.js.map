{
  "version": 3,
  "sources": ["../map-layers.js"],
  "sourcesContent": ["const TILE_LAYERS = {\n  OpenStreetMap: {\n    url: \"https://{a-c}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    options: { attribution: \"\u00A9 OpenStreetMap contributors\" },\n  },\n  \"Carto Dark\": {\n    url: \"https://{a-c}.basemaps.cartocdn.com/dark_all/{z}/{x}/{y}.png\",\n    options: { attribution: \"\u00A9 OpenStreetMap contributors, \u00A9 CARTO\" },\n  },\n  \"ESRI Satellite\": {\n    url: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\n    options: {\n      attribution:\n        \"\u00A9 Esri, i-cubed, USDA, USGS, AEX, GeoEye, Getmapping, Aerogrid, IGN, IGP, UPR-EGP, and the GIS User Community\",\n    },\n  },\n};\n\nconst OVERLAY_LAYERS = {\n  \"Railway Lines\": {\n    url: \"https://{a-c}.tiles.openrailwaymap.org/standard/{z}/{x}/{y}.png\",\n    options: { attribution: \"\u00A9 OpenRailwayMap\" },\n  },\n};\n\nconst activeLayers = {\n  base: null,\n  overlays: new Map(),\n};\n\nfunction switchBaseLayer(map, name) {\n  if (activeLayers.base) {\n    map.removeLayer(activeLayers.base);\n  }\n  const layerConfig = TILE_LAYERS[name];\n  const newBaseLayer = new ol.layer.Tile({\n    source: new ol.source.XYZ({\n      url: layerConfig.url,\n      attributions: layerConfig.options.attribution,\n    }),\n  });\n\n  map.getLayers().insertAt(0, newBaseLayer);\n  activeLayers.base = newBaseLayer;\n  document.getElementById(\"current-layer-name\").textContent = name;\n}\n\nfunction toggleOverlay(map, name, isEnabled) {\n  if (isEnabled) {\n    if (!activeLayers.overlays.has(name)) {\n      const layerConfig = OVERLAY_LAYERS[name];\n      const newOverlay = new ol.layer.Tile({\n        source: new ol.source.XYZ({\n          url: layerConfig.url,\n          attributions: layerConfig.options.attribution,\n        }),\n      });\n      map.addLayer(newOverlay);\n      activeLayers.overlays.set(name, newOverlay);\n    }\n  } else {\n    if (activeLayers.overlays.has(name)) {\n      map.removeLayer(activeLayers.overlays.get(name));\n      activeLayers.overlays.delete(name);\n    }\n  }\n}\n\nexport function createLayerControl(map) {\n  const baseLayerContainer = document.getElementById(\"base-layer-controls\");\n  const overlayContainer = document.getElementById(\"overlay-controls\");\n\n  for (const name in TILE_LAYERS) {\n    const option = document.createElement(\"div\");\n    option.className = \"layer-option\";\n    option.innerHTML = `\n      <input type=\"radio\" name=\"base-layer\" id=\"base-${name.replace(\n        /\\s/g,\n        \"-\"\n      )}\" value=\"${name}\">\n      <label for=\"base-${name.replace(/\\s/g, \"-\")}\">${name}</label>\n    `;\n    baseLayerContainer.appendChild(option);\n  }\n\n  baseLayerContainer.querySelector(\n    'input[value=\"OpenStreetMap\"]'\n  ).checked = true;\n  activeLayers.base = map.getLayers().getArray()[0];\n\n  for (const name in OVERLAY_LAYERS) {\n    const option = document.createElement(\"div\");\n    option.className = \"layer-option\";\n    option.innerHTML = `\n      <input type=\"checkbox\" id=\"overlay-${name.replace(\n        /\\s/g,\n        \"-\"\n      )}\" value=\"${name}\">\n      <label for=\"overlay-${name.replace(/\\s/g, \"-\")}\">${name}</label>\n    `;\n    overlayContainer.appendChild(option);\n  }\n\n  document\n    .getElementById(\"layer-dropdown-menu\")\n    .addEventListener(\"change\", (e) => {\n      if (e.target.name === \"base-layer\") {\n        switchBaseLayer(map, e.target.value);\n      } else if (e.target.type === \"checkbox\") {\n        toggleOverlay(map, e.target.value, e.target.checked);\n      }\n    });\n\n  document\n    .getElementById(\"layer-dropdown-btn\")\n    .addEventListener(\"click\", () => {\n      const menu = document.getElementById(\"layer-dropdown-menu\");\n      menu.style.display = menu.style.display === \"block\" ? \"none\" : \"block\";\n    });\n}\n"],
  "mappings": "AAAA,IAAMA,EAAc,CAClB,cAAe,CACb,IAAK,uDACL,QAAS,CAAE,YAAa,iCAA+B,CACzD,EACA,aAAc,CACZ,IAAK,+DACL,QAAS,CAAE,YAAa,6CAAwC,CAClE,EACA,iBAAkB,CAChB,IAAK,gGACL,QAAS,CACP,YACE,kHACJ,CACF,CACF,EAEMC,EAAiB,CACrB,gBAAiB,CACf,IAAK,kEACL,QAAS,CAAE,YAAa,qBAAmB,CAC7C,CACF,EAEMC,EAAe,CACnB,KAAM,KACN,SAAU,IAAI,GAChB,EAEA,SAASC,EAAgBC,EAAKC,EAAM,CAC9BH,EAAa,MACfE,EAAI,YAAYF,EAAa,IAAI,EAEnC,IAAMI,EAAcN,EAAYK,CAAI,EAC9BE,EAAe,IAAI,GAAG,MAAM,KAAK,CACrC,OAAQ,IAAI,GAAG,OAAO,IAAI,CACxB,IAAKD,EAAY,IACjB,aAAcA,EAAY,QAAQ,WACpC,CAAC,CACH,CAAC,EAEDF,EAAI,UAAU,EAAE,SAAS,EAAGG,CAAY,EACxCL,EAAa,KAAOK,EACpB,SAAS,eAAe,oBAAoB,EAAE,YAAcF,CAC9D,CAEA,SAASG,EAAcJ,EAAKC,EAAMI,EAAW,CAC3C,GAAIA,GACF,GAAI,CAACP,EAAa,SAAS,IAAIG,CAAI,EAAG,CACpC,IAAMC,EAAcL,EAAeI,CAAI,EACjCK,EAAa,IAAI,GAAG,MAAM,KAAK,CACnC,OAAQ,IAAI,GAAG,OAAO,IAAI,CACxB,IAAKJ,EAAY,IACjB,aAAcA,EAAY,QAAQ,WACpC,CAAC,CACH,CAAC,EACDF,EAAI,SAASM,CAAU,EACvBR,EAAa,SAAS,IAAIG,EAAMK,CAAU,QAGxCR,EAAa,SAAS,IAAIG,CAAI,IAChCD,EAAI,YAAYF,EAAa,SAAS,IAAIG,CAAI,CAAC,EAC/CH,EAAa,SAAS,OAAOG,CAAI,EAGvC,CAEO,SAASM,EAAmBP,EAAK,CACtC,IAAMQ,EAAqB,SAAS,eAAe,qBAAqB,EAClEC,EAAmB,SAAS,eAAe,kBAAkB,EAEnE,QAAWR,KAAQL,EAAa,CAC9B,IAAMc,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,UAAY,eACnBA,EAAO,UAAY;AAAA,uDACgCT,EAAK,QACpD,MACA,GACF,aAAaA;AAAA,yBACMA,EAAK,QAAQ,MAAO,GAAG,MAAMA;AAAA,MAElDO,EAAmB,YAAYE,CAAM,EAGvCF,EAAmB,cACjB,8BACF,EAAE,QAAU,GACZV,EAAa,KAAOE,EAAI,UAAU,EAAE,SAAS,EAAE,CAAC,EAEhD,QAAWC,KAAQJ,EAAgB,CACjC,IAAMa,EAAS,SAAS,cAAc,KAAK,EAC3CA,EAAO,UAAY,eACnBA,EAAO,UAAY;AAAA,2CACoBT,EAAK,QACxC,MACA,GACF,aAAaA;AAAA,4BACSA,EAAK,QAAQ,MAAO,GAAG,MAAMA;AAAA,MAErDQ,EAAiB,YAAYC,CAAM,EAGrC,SACG,eAAe,qBAAqB,EACpC,iBAAiB,SAAW,GAAM,CAC7B,EAAE,OAAO,OAAS,aACpBX,EAAgBC,EAAK,EAAE,OAAO,KAAK,EAC1B,EAAE,OAAO,OAAS,YAC3BI,EAAcJ,EAAK,EAAE,OAAO,MAAO,EAAE,OAAO,OAAO,CAEvD,CAAC,EAEH,SACG,eAAe,oBAAoB,EACnC,iBAAiB,QAAS,IAAM,CAC/B,IAAMW,EAAO,SAAS,eAAe,qBAAqB,EAC1DA,EAAK,MAAM,QAAUA,EAAK,MAAM,UAAY,QAAU,OAAS,OACjE,CAAC,CACL",
  "names": ["TILE_LAYERS", "OVERLAY_LAYERS", "activeLayers", "switchBaseLayer", "map", "name", "layerConfig", "newBaseLayer", "toggleOverlay", "isEnabled", "newOverlay", "createLayerControl", "baseLayerContainer", "overlayContainer", "option", "menu"]
}
